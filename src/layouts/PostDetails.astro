---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime.astro";
import CopyrightCard from "@components/CopyrightCard.astro";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";
import Comment from "@components/Comment.astro";

// import "photoswipe/style.css";
// import "photoswipe-dynamic-caption-plugin/photoswipe-dynamic-caption-plugin.css";
import "lightgallery/css/lightgallery-bundle.css";
export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, author, description, ogImage, pubDatetime, tags, license } = post.data;

const { Content } = await post.render();

const ogUrl = new URL(ogImage ? ogImage : `${title}.png`, Astro.url.origin)
  .href;
---

<Layout title={title} author={author} description={description} ogImage={ogUrl}>
  <Header />
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button_viewportSize
      class="focus-outline mb-2 mt-8 flex hover:opacity-75"
      onclick="
      history.back()
      "
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="svg-icon"
        ><path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>返回</span>
    </button>
  </div>
  <main id="main-content" data-pagefind-body>
    <h1 class="post-title">{title}</h1>
    <Datetime datetime={pubDatetime} size="lg" className="my-2" data-pagefind-ignore />

    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>

    <ul class="tags-container" data-pagefind-ignore>
      {tags.map(tag => <Tag name={slugifyStr(tag)} />)}
    </ul>

    <CopyrightCard
      title={title}
      url={Astro.url.toString()}
      author={author!}
      timestamp={pubDatetime}
      license={license}
    />

    <div class="torchlight-credit prose my-4" data-pagefind-ignore>Codeblock highlight powered by <a href="https://torchlight.dev">Torchlight</a>.</div>

    <Comment data-pagefind-ignore />
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold text-skin-accent;
  }
  .tags-container {
    @apply mt-8;
  }
  #article :global(figure.rehype-figure) :global(img) {
    @apply align-middle;
  }
  #article :global(figure.rehype-figure) :global(figcaption) {
    @apply text-sm text-center;
  }
</style>

<script>
  // // @ts-ignore
  // import PhotoSwipeLightbox from "photoswipe/lightbox"; 
  // // @ts-ignore
  // import PhotoSwipeDynamicCaption from "photoswipe-dynamic-caption-plugin";
  import lightGallery from "lightgallery";
  import lgThumbnail from "lightgallery/plugins/thumbnail";
  import lgZoom from "lightgallery/plugins/zoom";
  import lgFullscreen from "lightgallery/plugins/fullscreen";
  import lgRotate from "lightgallery/plugins/rotate";

  // for all figure > img, wrap the img inside a <a> element
  // so <img> become <a><img></a>
  const figures = document.querySelectorAll('#article figure');

  figures.forEach(figure => {
    const img = figure.querySelector<HTMLImageElement>('figure img');
    if (!img) return;
    const a = document.createElement('a');
    a.className = "lightbox-image"
    a.setAttribute("data-src", img.src);
    a.setAttribute("data-lg-size", `${img.width.toString()}-${img.height.toString()}`);
    a.target = "_blank";
    a.appendChild(img.cloneNode(true));
    figure.replaceChild(a, img);
  });

  window.addEventListener("load", (_event) => {
    // for all images (which should have been loaded), set the width and height of parent <a> element
    const images = document.querySelectorAll<HTMLImageElement>('#article figure a img');
    images.forEach(img => {
      const a = img.parentElement;
      if (!a) return;
      a.setAttribute("data-lg-size", `${img.width.toString()}-${img.height.toString()}`);
    });
  });

  lightGallery(
    document.getElementById('article')!, {
      selector: ".lightbox-image",
      plugins: [lgThumbnail, lgZoom, lgFullscreen, lgRotate]
    }
  )
</script>